"use strict"
define("ember-render/app",["exports","ember-render/resolver","ember-load-initializers","ember-render/config/environment"],function(e,t,n,r){Object.defineProperty(e,"__esModule",{value:!0})
var i=Ember.Application.extend({modulePrefix:r.default.modulePrefix,podModulePrefix:r.default.podModulePrefix,Resolver:t.default});(0,n.default)(i,r.default.modulePrefix),e.default=i}),define("ember-render/components/link-to-external",["exports","ember-engines/components/link-to-external-component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("ember-render/config/asset-manifest",["exports","ember-render/config/environment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=t.default.modulePrefix,r=n+"/config/asset-manifest",i=n+"/config/node-asset-manifest",a={}
try{if(require.has(i))a=require(i).default
else{var o=document.querySelector('meta[name="'+r+'"]').getAttribute("content")
a=JSON.parse(unescape(o))}}catch(e){throw new Error('Failed to load asset manifest. For browser environments, verify the meta tag with name "'+r+'" is present. For non-browser environments, verify that you included the node-asset-manifest module.')}e.default=a}),define("ember-render/helpers/app-version",["exports","ember-render/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,n){function r(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=t.default.APP.version,a=r.versionOnly||r.hideSha,o=r.shaOnly||r.hideVersion,l=null
return a&&(r.showExtended&&(l=i.match(n.versionExtendedRegExp)),l||(l=i.match(n.versionRegExp))),o&&(l=i.match(n.shaRegExp)),l?l[0]:i}Object.defineProperty(e,"__esModule",{value:!0}),e.appVersion=r,e.default=Ember.Helper.helper(r)}),define("ember-render/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("ember-render/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("ember-render/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","ember-render/config/environment"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var r=void 0,i=void 0
n.default.APP&&(r=n.default.APP.name,i=n.default.APP.version),e.default={name:"App Version",initialize:(0,t.default)(r,i)}}),define("ember-render/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("ember-render/initializers/data-adapter",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"data-adapter",before:"store",initialize:function(){}}}),define("ember-render/initializers/ember-data",["exports","ember-data/setup-container","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-data",initialize:t.default}}),define("ember-render/initializers/engines",["exports","ember-engines/initializers/engines"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})}),define("ember-render/initializers/export-application-global",["exports","ember-render/config/environment"],function(e,t){function n(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var n
if("undefined"!=typeof window)n=window
else if("undefined"!=typeof global)n=global
else{if("undefined"==typeof self)return
n=self}var r,i=t.default.exportApplicationGlobal
r="string"==typeof i?i:Ember.String.classify(t.default.modulePrefix),n[r]||(n[r]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[r]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default={name:"export-application-global",initialize:n}}),define("ember-render/initializers/injectStore",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"injectStore",before:"store",initialize:function(){}}}),define("ember-render/initializers/store",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"store",after:"ember-data",initialize:function(){}}}),define("ember-render/initializers/transforms",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"transforms",before:"store",initialize:function(){}}}),define("ember-render/instance-initializers/ember-data",["exports","ember-data/instance-initializers/initialize-store-service"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-data",initialize:t.default}}),define("ember-render/instance-initializers/load-asset-manifest",["exports","ember-render/config/asset-manifest"],function(e,t){function n(e){e.lookup("service:asset-loader").pushManifest(t.default)}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default={name:"load-asset-manifest",initialize:n}}),define("ember-render/resolver",["exports","ember-resolver"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("ember-render/router",["exports","ember-render/config/environment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=Ember.Router.extend({location:t.default.locationType,rootURL:t.default.rootURL})
n.map(function(){this.route("sun"),this.mount("inrepoengines")}),e.default=n}),define("ember-render/routes/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({actions:{getAllStars:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.engineInstance||this
this.set("instance",n),n.render(e,{into:"application",outlet:"galaxy"})},clearOutlet:function(){this.get("instance")&&this.disconnectOutlet({outlet:"galaxy",parentView:"application"})}}})}),define("ember-render/routes/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({beforeModel:function(){this._super.apply(this,arguments),this.transitionTo("sun")}})}),define("ember-render/routes/sun",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({})}),define("ember-render/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("ember-render/services/asset-loader",["exports","ember-asset-loader/services/asset-loader"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("ember-render/templates/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"bWc1K1Nc",block:'{"statements":[[1,[26,["outlet"]],false],[0,"\\n"],[11,"br",[]],[13],[14],[0,"\\napplication Outlet: "],[1,[33,["outlet"],["galaxy"],null],false],[0," "],[11,"br",[]],[13],[14],[0,"\\n"]],"locals":[],"named":[],"yields":[],"hasPartials":false}',meta:{moduleName:"ember-render/templates/application.hbs"}})}),define("ember-render/templates/common/apptemplate",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Yyx5RA+3",block:'{"statements":[[0,"Application Template\\n"]],"locals":[],"named":[],"yields":[],"hasPartials":false}',meta:{moduleName:"ember-render/templates/common/apptemplate.hbs"}})}),define("ember-render/templates/sun",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"iE3m5cGi",block:'{"statements":[[6,["link-to"],["inrepoengines.engineroute"],null,{"statements":[[0,"  Engine Route\\n"]],"locals":[]},null],[11,"br",[]],[13],[14],[0,"\\n"]],"locals":[],"named":[],"yields":[],"hasPartials":false}',meta:{moduleName:"ember-render/templates/sun.hbs"}})}),define("ember-render/config/environment",["ember"],function(e){try{var t="ember-render/config/environment",n=document.querySelector('meta[name="'+t+'"]').getAttribute("content"),r=JSON.parse(unescape(n)),i={default:r}
return Object.defineProperty(i,"__esModule",{value:!0}),i}catch(e){throw new Error('Could not read config from meta tag with name "'+t+'".')}}),runningTests||require("ember-render/app").default.create({name:"ember-render",version:"0.0.0+0c737196"})
